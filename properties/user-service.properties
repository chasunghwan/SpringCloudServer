# SPRING ADMIN CLIENT 설정
spring.boot.admin.client.instance.service-url=http://localhost:${server.port}
spring.boot.admin.client.url=http://localhost:${admin.server.port}
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS
management.endpoint.shutdown.enable=true

# SPRING ADMIN SECURITY 설정
spring.boot.admin.client.instance.metadata.user.name={cipher}9ab33ceff94b860671f66568409c1faa481af093c9eac72db1fed30942224144
spring.boot.admin.client.instance.metadata.user.password={cipher}9ab33ceff94b860671f66568409c1faa481af093c9eac72db1fed30942224144
spring.boot.admin.client.username={cipher}9ab33ceff94b860671f66568409c1faa481af093c9eac72db1fed30942224144
spring.boot.admin.client.password={cipher}9ab33ceff94b860671f66568409c1faa481af093c9eac72db1fed30942224144

# EVENT BUS REFRESH
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password={cipher}ddf204aedeed83fc41b8dc47375b7d59f07040684073e7a584a85441505d542f

# SPRING ADMIN JMX-bean 설정
spring.jmx.enabled=true

# SPRING ADMIN TAG
spring.boot.admin.client.instance.metadata.tags.environment=UserService
info.tags.environment=UserService

logging.file.name=D:/log/MSA/user-service.log
logging.level.org.hibernate=ERROR

server.compression.enabled=true 
server.compression.excluded-user-agents= 
server.compression.mime-types= text/html,text/plain,text/css,application/javascript,application/json
server.compression.min-response-size=2048

# none : 미동작
# create-only : 테이블이 미존재시 생성
# drop : 테이블 drop
# create : 테이블이 존재할경우 drop 후 create
# validate : 엔티티 설정과 기존 테이블 설정이 다를경우 에러 발생
# update : 테이블, 컬럼정보가 달라졌을 경우 추가
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.FirebirdDialect

spring.datasource.url=jdbc:firebirdsql://localhost:3050/D:\BOOT.FDB
spring.datasource.driverClassName=org.firebirdsql.jdbc.FBDriver
spring.datasource.username=sysdba
spring.datasource.password={cipher}1fe11a90aa7ee57886a73031d0074babbec77ebbda2f7e5a8d7fea596f79f62e

## EUREKA CLIENT
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:${eureka.server.port}/eureka/

# 유레카 서비스에 등록되는 서비스는 애플리케이션 ID 와 인스턴스 ID가 존재
# 애플리케이션 ID는 서비스 인스턴스 그룹을 의미 (spring.application.name)
# 인스턴스 ID는 개별 서비스 인스턴스를 인식하는 임의의 숫자
# 서비스 이름 대신 IP 주소 등록
eureka.instance.prefer-ip-address=true
# 유레카 서버에 서비스 등록
eureka.client.register-with-eureka=true
# 레지스트리가 로컬에 캐싱됨 (30초마다 유레카 클라이언트가 유레카 레지스트리 변경 사항 여부 재확인)
# 레지스트리 정보를 로컬에 캐싱
eureka.client.fetch-registry=true

## Feign
auth.service.id=auth-service
user.service.id=user-service